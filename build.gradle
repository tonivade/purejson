plugins {
  id 'java-library'
  id 'jacoco'
  id 'maven-publish'
  id 'signing'
  id 'io.github.gradle-nexus.publish-plugin' version '1.0.0'
}

group = 'com.github.tonivade'
version = '0.2-SNAPSHOT'

java {
  sourceCompatibility = JavaVersion.VERSION_11
  targetCompatibility = JavaVersion.VERSION_11
  
  withJavadocJar()
  withSourcesJar()
}

jacoco {
  toolVersion = '0.8.6'
}

repositories {
  mavenLocal() 
  mavenCentral()
  maven {
    url = 'https://oss.sonatype.org/content/repositories/snapshots'
  }
}

test {
  useJUnitPlatform()

  jvmArgs(['--illegal-access=permit'])
}

javadoc.options {
  addStringOption('-release', '11')
}

dependencies {
  api 'com.github.tonivade:purefun-core:2.3-SNAPSHOT'
  api 'com.eclipsesource.minimal-json:minimal-json:0.9.5'
  implementation 'com.squareup:javapoet:1.12.1'
  testImplementation 'com.google.testing.compile:compile-testing:0.19'
  testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
  testImplementation 'org.junit.platform:junit-platform-runner:1.7.0'
  testImplementation 'com.github.tonivade:purecheck:0.2-SNAPSHOT'
  testImplementation 'com.github.tonivade:purefun-monad:2.3-SNAPSHOT'
  testImplementation 'com.github.tonivade:purefun-instances:2.3-SNAPSHOT'
  testImplementation 'com.google.code.gson:gson:2.8.6'
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      
      from components.java
      
      pom {
        name = 'PureJson'
        description = 'Pure Functional Json Parser Library'
        url = 'https://github.com/tonivade/purejson'
        inceptionYear = '2020'

        scm {
          url = 'https://github.com/tonivade/purejson'
          connection = 'scm:https://github.com/tonivade/purejson.git'
          developerConnection = 'scm:git://github.com/tonivade/purejson.git'
        }

        licenses {
          license {
            name = 'The MIT License (MIT)'
            url = 'https://github.com/tonivade/purejson/blob/master/LICENSE'
            distribution = 'repo'
          }
        }

        developers {
          developer {
            id = 'tonivade'
            name = 'Antonio Mu√±oz'
            email = 'antoniogmc@gmail.com'
          }
        }
      }
    }
  }
}

nexusPublishing {
  
  repositories {
    sonatype {
      stagingProfileId = '19a96b937cdb5'
      
      username = project.findProperty('nexusUsername')  
      password = project.findProperty('nexusPassword')
    }
  }
  
  clientTimeout = Duration.ofSeconds(300)
  connectTimeout = Duration.ofSeconds(60)

  transitionCheckOptions {
    maxRetries.set(40)
    delayBetween.set(java.time.Duration.ofMillis(3000))
  }
}

signing {
  sign publishing.publications.mavenJava
}